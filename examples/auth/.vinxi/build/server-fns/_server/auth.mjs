import{setEnvDefaults as D,createActionURL as _,Auth as m,raw as b,skipCSRFCheck as A,isAuthAction as L}from"@auth/core";import"@auth/core/errors";import{H3Event as T,sendRedirect as x}from"h3";import{i as C}from"./cache.mjs";import{AsyncLocalStorage as H}from"node:async_hooks";import{isDev as k}from"solid-js/web";import I from"@auth/core/providers/discord";import j from"@auth/core/providers/credentials";import{z as R}from"zod";function re(e){const s=new URL("http://localhost:3000/api/auth");e&&!e.toString().startsWith("http")&&(e=`https://${e}`);const t=new URL(e??s),n=(t.pathname==="/"?s.pathname:t.pathname).replace(/\/$/,""),r=`${t.origin}${n}`;return{origin:t.origin,host:t.host,path:n,base:r,toString:()=>r}}const q=e=>{if(e.startsWith("VITE_"))return{BASE_URL:"/_server",CWD:"/Users/or/Desktop/mediakit2/examples/auth",DEV:!1,DEVTOOLS:!1,MANIFEST:globalThis.MANIFEST,MODE:"production",PROD:!0,ROUTERS:["public","ssr","client","server-fns"],ROUTER_HANDLER:"../../node_modules/.pnpm/@solidjs+start@1.0.8_solid-js@1.9.2_vinxi@0.4.3_@types+node@22.0.0_ioredis@5.4.1_terser@5.31._lxz3rjpwflohp37sgo3rcjdeuy/node_modules/@solidjs/start/dist/runtime/server-handler.js",ROUTER_NAME:"server-fns",ROUTER_TYPE:"http",SERVER_BASE_URL:"",SSR:!0,START_APP:"./src/app.tsx",START_DEV_OVERLAY:!0,START_ISLANDS:!1,START_SSR:!0,VITE_AUTH_PATH:"/api/auth"}[e];if(typeof process<"u"&&typeof process.env<"u"&&!e.startsWith("VITE_"))return process.env[e]},N=(...e)=>{for(const s of e){const t=q(s);if(t)return t}};function h(e,s){D(e,s,!0),s.trustHost??=k,s.basePath??=g(s)}const g=e=>e?.basePath?e.basePath:N("VITE_AUTH_PATH")??"/api/auth";function V(){return M()}const U=Symbol("$HTTPEvent");function z(e){return typeof e=="object"&&(e instanceof T||e?.[U]instanceof T||e?.__is_event__===!0)}function W(e){return function(...s){let t=s[0];if(z(t))s[0]=t instanceof T||t.__is_event__?t:t[U];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(t=V(),!t)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");s.unshift(t)}return e(...s)}}const d=W(x);function F(){return C("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:H})}function M(){return F().use().event}const P="authorizationParams-";function oe(e){const s=async t=>{const n=typeof e=="object"?e:await e(t);h(process.env,n),n.basePath??=g(n);const{request:r}=t,a=new URL(r.url),p=a.pathname.slice(n.basePath.length+1).split("/")[0];return L(p)&&a.pathname.startsWith(n.basePath+"/")?m(r,n):new Response("Not Found",{status:404})};return{signIn:async t=>{const{request:n}=t,r=typeof e=="object"?e:await e(t);h(process.env,r);const a=await n.formData(),{providerId:p,...i}=Object.fromEntries(a);let l={},f={};for(const c in i)c.startsWith(P)?l[c.slice(P.length)]=i[c]:f[c]=i[c];await B(p,f,l,r,t)},signOut:async t=>{const n=typeof e=="object"?e:await e(t);h(process.env,n);const r=Object.fromEntries(await t.request.formData());await Y(r,n,t)},GET:s,POST:s}}async function B(e,s={},t,n,r){const{request:a}=r,{protocol:p}=new URL(a.url),i=new Headers(a.headers),{redirect:l=!0,redirectTo:f,...c}=s instanceof FormData?Object.fromEntries(s):s,u=f?.toString()??i.get("Referer")??"/",S=_("signin",p,i,process.env,n);if(!e){const o=`${S}?${new URLSearchParams({callbackUrl:u})}`;return l&&d(r.nativeEvent,o,302),o}let w=`${S}/${e}?${new URLSearchParams(t)}`,E;for(const o of n.providers){const{id:y}=typeof o=="function"?o():o;if(y===e){E=y;break}}if(!E){const o=`${S}?${new URLSearchParams({callbackUrl:u})}`;return l&&d(r.nativeEvent,o,302),o}E==="credentials"&&(w=w.replace("signin","callback")),i.set("Content-Type","application/x-www-form-urlencoded");const O=new URLSearchParams({...c,callbackUrl:u}),$=new Request(w,{method:"POST",headers:i,body:O}),v=await m($,{...n,raw:b,skipCSRFCheck:A});for(const o of v?.cookies??[])r.response.headers.append("set-cookie",`${o.name}=${o.value}; Path=/; ${o.options?.httpOnly?"HttpOnly;":""} ${o.options?.secure?"Secure;":""} ${o.options?.sameSite?`SameSite=${o.options.sameSite};`:""}`);return l?d(r.nativeEvent,v.redirect,302):v.redirect}async function Y(e,s,t){const{request:n}=t,{protocol:r}=new URL(n.url),a=new Headers(n.headers);a.set("Content-Type","application/x-www-form-urlencoded");const p=_("signout",r,a,process.env,s),i=e?.redirectTo??a.get("Referer")??"/",l=new URLSearchParams({callbackUrl:i}),f=new Request(p,{method:"POST",headers:a,body:l}),c=await m(f,{...s,raw:b,skipCSRFCheck:A});for(const u of c?.cookies??[])t.response.headers.append("set-cookie",`${u.name}=${u.value}; Path=/; ${u.options?.httpOnly?"HttpOnly;":""} ${u.options?.secure?"Secure;":""} ${u.options?.sameSite?`SameSite=${u.options.sameSite};`:""}`);return e?.redirect??!0?d(t.nativeEvent,c.redirect,302):c}async function ae(e,s){const t="request"in e?e.request:e;h(process.env,s);const{protocol:n}=new URL(t.url),r=_("session",n,new Headers(t.headers),process.env,s),a=await m(new Request(r,{headers:t.headers}),s),{status:p=200}=a,i=await a.json();if(!i||!Object.keys(i).length)return null;if(p===200)return i;throw new Error(i.message)}const G=R.object({email:R.string().min(1).email(),password:R.string().min(4)}),ie={providers:[I({clientId:process.env.DISCORD_ID,clientSecret:process.env.DISCORD_SECRET}),j({credentials:{email:{},password:{}},async authorize(e){const s=await G.safeParseAsync(e);if(!s.success)throw new Error("No Such User");return{name:s.data.email.split("@")[0],email:s.data.email}}})],debug:!1,basePath:"/api/auth"};export{oe as S,ie as a,g as b,N as c,ae as g,re as p};
